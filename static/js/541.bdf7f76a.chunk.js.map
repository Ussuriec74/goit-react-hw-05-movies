{"version":3,"file":"static/js/541.bdf7f76a.chunk.js","mappings":"+NA0CA,UAtCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,GAAUH,GAFjC,OAEUI,EAFV,OAGIP,EAAQO,EAAKR,MAHjB,gDAKIG,EAAS,EAAD,IALZ,0DADc,uBAAC,WAAD,wBASdM,EACD,GAAE,CAACL,KAGF,gCACGF,IAAS,SAAC,KAAD,CAAUQ,GAAG,UAAUC,SAAO,IACtCX,GAEG,wBACAA,EAAKY,KAAI,SAAAC,GAAK,aACb,2BACE,gBACEC,IAAG,yCAAoCD,EAAME,cAC7CC,IAAKH,EAAMI,QAEb,6BAAKJ,EAAMI,SACX,iDAAeJ,EAAMK,iBAArB,QAAkC,4BAN3BL,EAAMM,QADF,OAFd,kEAeV,C,2MCtCDC,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,yGAAoCC,EAApC,+BAA2C,EAA3C,kBAG6BH,IAAAA,IAAA,sCACUC,EADV,iBAC0BE,IAJvD,cAGYC,EAHZ,yBAMaA,EAAShB,MANtB,gCASQiB,QAAQvB,MAAR,MATR,0FAaewB,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAoCC,EAApC,+BAAkD,GAAIJ,EAAtD,+BAA6D,EAA7D,kBAE6BH,IAAAA,IAAA,gCACIC,EADJ,iBACoBE,EADpB,kBACkCI,IAH/D,cAEYH,EAFZ,yBAKaA,EAAShB,MALtB,gCAOMiB,QAAQvB,MAAR,MAPN,0FAWe0B,EAAe,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BC,GAA9B,gGAE6BT,IAAAA,IAAA,iBAAoBS,EAApB,oBAAkCR,IAF/D,cAEYG,EAFZ,yBAGaA,EAAShB,MAHtB,gCAKMiB,QAAQvB,MAAR,MALN,yFASeK,EAAU,GAAVA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBsB,GAAzB,gGAE2BT,IAAAA,IAAA,iBAAoBS,EAApB,4BAA0CR,IAFrE,cAEUG,EAFV,yBAGWA,EAAShB,MAHpB,gCAKIiB,QAAQvB,MAAR,MALJ,yFASe4B,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BD,GAA5B,gGAE2BT,IAAAA,IAAA,iBAAoBS,EAApB,4BAA0CR,IAFrE,cAEUG,EAFV,yBAGWA,EAAShB,MAHpB,gCAKIiB,QAAQvB,MAAR,MALJ,gF","sources":["components/Cast/Cast.js","servises/moviesApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { fetchCast } from '../../servises/moviesApi';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getCast() {\n      try {\n        const data = await fetchCast(movieId);\n        setCast(data.cast);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    getCast()\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <Navigate to=\"/movies\" replace />}\n      {!cast\n        ? (<p>We don`t have any cast on this movie</p>)\n        : (<ul>\n          {cast.map(acter => (\n            <li key={acter.cast_id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200${acter.profile_path}`}\n                alt={acter.name}\n              />\n              <p> {acter.name}</p>\n              <p>Character: {acter.character ?? 'individual character'}</p>\n            </li>\n          ))}\n        </ul>)}\n    </>\n  )\n}\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = \"3b8854889b3ae9f1745391c328ab3fe2\";\n\nasync function fetchTrendingMovies( page = 1 ) {\n    \n    try {\n      const response = await axios.get(\n        `/trending/movie/day?api_key=${API_KEY}&page=${page}`\n      );\n      return response.data;\n    \n    } catch (error) {\n        console.error(error);\n    } \n}\n\nasync function fetchMoviesOnSearch( searchQuery = \"\", page = 1) {\n    try {\n      const response = await axios.get(\n        `/search/movie?api_key=${API_KEY}&page=${page}&query=${searchQuery}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n}\n  \nasync function fetchMovieById(id) {\n    try {\n      const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  \nasync function fetchCast(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchReviews(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport { fetchTrendingMovies, fetchMoviesOnSearch, fetchMovieById, fetchCast, fetchReviews };\n\n"],"names":["useState","cast","setCast","error","setError","movieId","useParams","useEffect","fetchCast","data","getCast","to","replace","map","acter","src","profile_path","alt","name","character","cast_id","axios","API_KEY","fetchTrendingMovies","page","response","console","fetchMoviesOnSearch","searchQuery","fetchMovieById","id","fetchReviews"],"sourceRoot":""}