{"version":3,"file":"static/js/75.b6e4c3f8.chunk.js","mappings":"uOAwCA,UApCa,WAEX,OAA4CA,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,MAFvB,OAEUC,EAFV,OAGIL,EAAkBK,EAAKC,SAH3B,gDAKIJ,EAAS,EAAD,IALZ,0DADc,uBAAC,WAAD,wBASdK,EACD,GAAE,KAID,gCACGN,IAAS,SAAC,KAAD,CAAUO,GAAG,IAAIC,SAAO,KAClC,4CACA,wBACGV,EAAeW,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,cAAb,OAClB,yBACE,SAAC,KAAD,CAAML,GAAE,kBAAaG,GAArB,gBACGC,QADH,IACGA,EAAAA,EAASC,KAFLF,EADS,QAW3B,C,2MCpCDG,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAAhB,SAEeX,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,yGAAoCY,EAApC,+BAA2C,EAA3C,kBAG6BF,IAAAA,IAAA,sCACUC,EADV,iBAC0BC,IAJvD,cAGYC,EAHZ,yBAMaA,EAASZ,MANtB,gCASQa,QAAQjB,MAAR,MATR,0FAaekB,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAoCC,EAApC,+BAAkD,GAAIJ,EAAtD,+BAA6D,EAA7D,kBAE6BF,IAAAA,IAAA,gCACIC,EADJ,iBACoBC,EADpB,kBACkCI,IAH/D,cAEYH,EAFZ,yBAKaA,EAASZ,MALtB,gCAOMa,QAAQjB,MAAR,MAPN,0FAWeoB,EAAe,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BV,GAA9B,gGAE6BG,IAAAA,IAAA,iBAAoBH,EAApB,oBAAkCI,IAF/D,cAEYE,EAFZ,yBAGaA,EAASZ,MAHtB,gCAKMa,QAAQjB,MAAR,MALN,yFASeqB,EAAU,GAAVA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBX,GAAzB,gGAE2BG,IAAAA,IAAA,iBAAoBH,EAApB,4BAA0CI,IAFrE,cAEUE,EAFV,yBAGWA,EAASZ,MAHpB,gCAKIa,QAAQjB,MAAR,MALJ,yFASesB,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BZ,GAA5B,gGAE2BG,IAAAA,IAAA,iBAAoBH,EAApB,4BAA0CI,IAFrE,cAEUE,EAFV,yBAGWA,EAASZ,MAHpB,gCAKIa,QAAQjB,MAAR,MALJ,gF","sources":["pages/Home/Home.js","servises/moviesApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, Navigate } from 'react-router-dom';\nimport { fetchTrendingMovies } from '../../servises/moviesApi';\n\nconst Home = () => {\n  \n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function getTrendingMovies() {\n      try {\n        const data = await fetchTrendingMovies();\n        setTrendingMovies(data.results);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    getTrendingMovies();\n  }, []);\n\n  return (\n    \n    <>\n      {error && <Navigate to=\"/\" replace />}\n      <h2>Trending today</h2>\n      <ul>\n        {trendingMovies.map(({id, title, original_name}) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`}>\n              {title ?? original_name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  )\n  \n}\n\nexport default Home;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = \"3b8854889b3ae9f1745391c328ab3fe2\";\n\nasync function fetchTrendingMovies( page = 1 ) {\n    \n    try {\n      const response = await axios.get(\n        `/trending/movie/day?api_key=${API_KEY}&page=${page}`\n      );\n      return response.data;\n    \n    } catch (error) {\n        console.error(error);\n    } \n}\n\nasync function fetchMoviesOnSearch( searchQuery = \"\", page = 1) {\n    try {\n      const response = await axios.get(\n        `/search/movie?api_key=${API_KEY}&page=${page}&query=${searchQuery}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n}\n  \nasync function fetchMovieById(id) {\n    try {\n      const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  \nasync function fetchCast(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchReviews(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport { fetchTrendingMovies, fetchMoviesOnSearch, fetchMovieById, fetchCast, fetchReviews };\n\n"],"names":["useState","trendingMovies","setTrendingMovies","error","setError","useEffect","fetchTrendingMovies","data","results","getTrendingMovies","to","replace","map","id","title","original_name","axios","API_KEY","page","response","console","fetchMoviesOnSearch","searchQuery","fetchMovieById","fetchCast","fetchReviews"],"sourceRoot":""}