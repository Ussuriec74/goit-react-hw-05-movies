{"version":3,"file":"static/js/857.6f147ea9.chunk.js","mappings":"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","sources":["components/Searchbar/Searchbar.js","pages/Movies/Movies.js","servises/moviesApi.js"],"sourcesContent":["import { useState } from \"react\";\n\nexport const Searchbar = ({ onSubmit }) => {\n  \n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleChange = event => {\n    setSearchQuery(event.target.value.trim());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n        value={searchQuery} \n        onChange={handleChange}\n        type=\"text\"\n        placeholder=\"Search parameters\"\n        />\n        <button type=\"submit\">\n          Search\n        </button>\n      </form>\n    </>\n  )\n}","import { useState, useEffect } from 'react';\nimport { Navigate, Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { Box } from 'components/Box';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { fetchMoviesOnSearch } from '../../servises/moviesApi';\n\nconst Movies = () => {\n\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const movie = searchParams.get('query');\n    if (!movie) return;\n    \n    async function getSearchMovies() {\n      try {\n        const data = await fetchMoviesOnSearch(movie);\n        setSearchMovies(data.results);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    getSearchMovies();\n  }, [searchParams]);\n\n  const handleSubmit = searchQuery => {\n    setSearchParams({ query: searchQuery });\n  };\n\n  return (\n    <>\n      {error && <Navigate to=\"/movies\" replace />}\n      <Searchbar onSubmit={handleSubmit} />\n      {searchMovies && (\n        <Box as=\"ul\">\n          {searchMovies.map(({ id, title, original_name }) => (\n            <li key={id} >\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title ?? original_name}\n              </Link>\n            </li>\n          ))}\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = \"3b8854889b3ae9f1745391c328ab3fe2\";\n\nasync function fetchTrendingMovies( page = 1 ) {\n    \n    try {\n      const response = await axios.get(\n        `/trending/movie/day?api_key=${API_KEY}&page=${page}`\n      );\n      return response.data;\n    \n    } catch (error) {\n        console.error(error);\n    } \n}\n\nasync function fetchMoviesOnSearch( searchQuery = \"\", page = 1) {\n    try {\n      const response = await axios.get(\n        `/search/movie?api_key=${API_KEY}&page=${page}&query=${searchQuery}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n}\n  \nasync function fetchMovieById(id) {\n    try {\n      const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  \nasync function fetchCast(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchReviews(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport { fetchTrendingMovies, fetchMoviesOnSearch, fetchMovieById, fetchCast, fetchReviews };\n\n"],"names":["Searchbar","onSubmit","useState","searchQuery","setSearchQuery","event","preventDefault","value","onChange","target","trim","type","placeholder","location","useLocation","useSearchParams","searchParams","setSearchParams","searchMovies","setSearchMovies","error","setError","useEffect","movie","get","fetchMoviesOnSearch","data","results","getSearchMovies","to","replace","query","Box","as","map","id","title","original_name","state","from","axios","API_KEY","fetchTrendingMovies","page","response","console","fetchMovieById","fetchCast","fetchReviews"],"sourceRoot":""}