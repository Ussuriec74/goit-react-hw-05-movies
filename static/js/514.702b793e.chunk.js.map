{"version":3,"file":"static/js/514.702b793e.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js","servises/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviePoster = styled.img`\n  display: block;\n  width: 16%;\n  margin-right: ${p => p.theme.space[4]}px;\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n","import { Box } from \"components/Box\";\nimport { MoviePoster } from \"components/MovieCard/MovieCard.styled\";\n\nexport const MovieCard = ({ movieDetails, imageSrc, movieGenres, movieRelease }) => {\n  return (\n    <Box display=\"flex\" ml={4}>\n      <MoviePoster src={imageSrc} alt={`${movieDetails.title}`} />\n      <Box p={4}>\n        <h2>{`${movieDetails.original_title} (${movieRelease})`}</h2>\n        <p>{`User score: ${(movieDetails.vote_average * 10).toFixed(2)}%`}</p>\n        <h3>Overview</h3>\n        <p>{`${movieDetails.overview}`}</p>\n        <h3>Genres</h3>\n        <p>{movieGenres}</p>\n      </Box>\n    </Box>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const GoBackBtn = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-evenly;\n  width: ${p => p.theme.space[7]}px;\n  margin: ${p => p.theme.space[2]}px ${p => p.theme.space[4]}px;\n  text-decoration: none;\n  background-color: ${p => p.theme.colors.btnColor};\n  color: ${p => p.theme.colors.black};\n  padding: 0 ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.small};\n`;\n\nexport const BtnList = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: ${p => p.theme.space[3]}px;\n  margin-bottom: ${p => p.theme.space[0]}px;\n  padding-left: ${p => p.theme.space[0]}px;\n  padding-bottom: ${p => p.theme.space[4]}px;\n\n  border-bottom: ${p => p.theme.borders.bold} ${p => p.theme.colors.gray};\n`;\n\nexport const AdditionalBtn = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-evenly;\n  width: ${p => p.theme.space[6]}px;\n  text-decoration: none;\n  background-color: ${p => p.theme.colors.btnColor};\n  color: ${p => p.theme.colors.black};\n  padding: 0 ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.small};\n`;\n\n    ","import { useState, useEffect, Suspense } from 'react';\nimport { Navigate, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { Box } from 'components/Box';\nimport { fetchMovieById } from '../../servises/moviesApi';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { Loader } from 'components/Loader/Loader';\nimport { GoBackBtn, BtnList, AdditionalBtn } from './MovieDetails.styled';\n\n\nconst MovieDetails = () => {\n\n  const location = useLocation();\n  const { movieId } = useParams();\n  const backLink = location?.state?.from ?? `/`;\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [imageSrc, setImageSrc] = useState('');\n  const [movieGenres, setMovieGenres] = useState('');\n  const [movieRelease, setMovieRelease] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function getMovieDetails() {\n      try {\n        const data = await fetchMovieById(movieId);\n        setMovieDetails(data);\n        setImageSrc(`https://image.tmdb.org/t/p/w500${data.poster_path}`);\n        setMovieGenres(\n          data.genres.map(genre => (\n            <span key={genre.id}>{`${genre.name} `}</span>\n          ))\n        );\n        setMovieRelease(data.release_date.split('-')[0]);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    getMovieDetails();\n  }, [movieId]);\n\n  \n\n  return (\n    <>\n      {error && <Navigate to=\"/movies\" replace />}\n      <GoBackBtn to={backLink}>\n        <BiArrowBack />Go Back\n      </GoBackBtn>\n      <MovieCard\n        movieDetails={movieDetails}\n        imageSrc={imageSrc}\n        movieGenres={movieGenres}\n        movieRelease={movieRelease}\n      />\n      <Box pt={4} ml={4} mr={4} borderTop=\"2px solid gray\" >\n        <h4>Additional information:</h4>\n        <BtnList >\n          <li>\n            <AdditionalBtn to=\"cast\" datarelease={movieRelease}>\n              Cast\n            </AdditionalBtn>\n          </li>\n          <li>\n            <AdditionalBtn to=\"reviews\">Reviews</AdditionalBtn>\n          </li>\n        </BtnList>\n        <Suspense fallback={ <Loader /> }>\n          <Outlet />\n        </Suspense> \n      </Box>\n\n\n    </>\n  )\n}\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = \"3b8854889b3ae9f1745391c328ab3fe2\";\n\nasync function fetchTrendingMovies( page = 1 ) {\n    \n    try {\n      const response = await axios.get(\n        `/trending/movie/day?api_key=${API_KEY}&page=${page}`\n      );\n      return response.data;\n    \n    } catch (error) {\n        console.error(error);\n    } \n}\n\nasync function fetchMoviesOnSearch( searchQuery = \"\", page = 1) {\n    try {\n      const response = await axios.get(\n        `/search/movie?api_key=${API_KEY}&page=${page}&query=${searchQuery}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n}\n  \nasync function fetchMovieById(id) {\n    try {\n      const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  \nasync function fetchCast(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchReviews(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport { fetchTrendingMovies, fetchMoviesOnSearch, fetchMovieById, fetchCast, fetchReviews };\n\n"],"names":["MoviePoster","styled","p","theme","space","MovieCard","movieDetails","imageSrc","movieGenres","movieRelease","Box","display","ml","src","alt","title","original_title","vote_average","toFixed","overview","GoBackBtn","Link","colors","btnColor","black","radii","small","BtnList","borders","bold","gray","AdditionalBtn","location","useLocation","movieId","useParams","backLink","state","from","useState","setMovieDetails","setImageSrc","setMovieGenres","setMovieRelease","error","setError","useEffect","fetchMovieById","data","poster_path","genres","map","genre","name","id","release_date","split","getMovieDetails","to","replace","pt","mr","borderTop","datarelease","Suspense","fallback","Loader","axios","API_KEY","fetchTrendingMovies","page","response","console","fetchMoviesOnSearch","searchQuery","fetchCast","fetchReviews"],"sourceRoot":""}