{"version":3,"file":"static/js/421.ddec3301.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.js","pages/MovieDetails/MovieDetails.js","servises/moviesApi.js"],"sourcesContent":["import { Box } from \"components/Box\"\n\nexport const MovieCard = ({ movieDetails, imageSrc, movieGenres, movieRelease }) => {\n  return (\n    <Box>\n      <img src={imageSrc} alt={`${movieDetails.title}`} />\n      <Box>\n        <h2>{`${movieDetails.original_title} (${movieRelease})`}</h2>\n        <p>{`User score: ${(movieDetails.vote_average * 10).toFixed(2)}%`}</p>\n        <h3>Overview</h3>\n        <p>{`${movieDetails.overview}`}</p>\n        <h3>Genres</h3>\n        <p>{movieGenres}</p>\n      </Box>\n    </Box>\n  );\n};\n","import { useState, useEffect, Suspense } from 'react';\nimport { Navigate, Outlet, Link, useLocation, useParams } from 'react-router-dom';\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { Box } from 'components/Box';\nimport { fetchMovieById } from '../../servises/moviesApi';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { Loader } from 'components/Loader/Loader';\n\n\nconst MovieDetails = () => {\n\n  const location = useLocation();\n  const { movieId } = useParams();\n  const backLink = location?.state?.from ?? `/`;\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [imageSrc, setImageSrc] = useState('');\n  const [movieGenres, setMovieGenres] = useState('');\n  const [movieRelease, setMovieRelease] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function getMovieDetails() {\n      try {\n        const data = await fetchMovieById(movieId);\n        setMovieDetails(data);\n        setImageSrc(`https://image.tmdb.org/t/p/w500${data.poster_path}`);\n        setMovieGenres(\n          data.genres.map(genre => (\n            <span key={genre.id}>{`${genre.name} `}</span>\n          ))\n        );\n        setMovieRelease(data.release_date.split('-')[0]);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    getMovieDetails();\n  }, [movieId]);\n\n  \n\n  return (\n    <>\n      {error && <Navigate to=\"/movies\" replace />}\n      <Link to={backLink}>\n        <BiArrowBack />Go Back\n      </Link>\n      <MovieCard\n        movieDetails={movieDetails}\n        imageSrc={imageSrc}\n        movieGenres={movieGenres}\n        movieRelease={movieRelease}\n      />\n      <Box>\n        <h4>Additional information:</h4>\n        <ul>\n          <li>\n            <Link to=\"cast\" datarelease={movieRelease}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Suspense fallback={ <Loader /> }>\n          <Outlet />\n        </Suspense> \n      </Box>\n\n\n    </>\n  )\n}\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = \"3b8854889b3ae9f1745391c328ab3fe2\";\n\nasync function fetchTrendingMovies( page = 1 ) {\n    \n    try {\n      const response = await axios.get(\n        `/trending/movie/day?api_key=${API_KEY}&page=${page}`\n      );\n      return response.data;\n    \n    } catch (error) {\n        console.error(error);\n    } \n}\n\nasync function fetchMoviesOnSearch( searchQuery = \"\", page = 1) {\n    try {\n      const response = await axios.get(\n        `/search/movie?api_key=${API_KEY}&page=${page}&query=${searchQuery}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n}\n  \nasync function fetchMovieById(id) {\n    try {\n      const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  \nasync function fetchCast(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchReviews(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport { fetchTrendingMovies, fetchMoviesOnSearch, fetchMovieById, fetchCast, fetchReviews };\n\n"],"names":["MovieCard","movieDetails","imageSrc","movieGenres","movieRelease","Box","src","alt","title","original_title","vote_average","toFixed","overview","location","useLocation","movieId","useParams","backLink","state","from","useState","setMovieDetails","setImageSrc","setMovieGenres","setMovieRelease","error","setError","useEffect","fetchMovieById","data","poster_path","genres","map","genre","name","id","release_date","split","getMovieDetails","to","replace","datarelease","Suspense","fallback","Loader","axios","API_KEY","fetchTrendingMovies","page","response","console","fetchMoviesOnSearch","searchQuery","fetchCast","fetchReviews"],"sourceRoot":""}