{"version":3,"file":"static/js/785.14cb207c.chunk.js","mappings":"+NAuCA,UAnCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAaH,GAFpC,OAEUI,EAFV,OAGIP,EAAWO,EAAKC,SAHpB,gDAKIN,EAAS,EAAD,IALZ,0DADc,uBAAC,WAAD,wBASdO,EACD,GAAE,CAACN,KAGF,gCACGF,IAAS,SAAC,KAAD,CAAUS,GAAG,UAAUC,SAAO,IACpB,IAAnBZ,EAAQa,QACJ,oEACA,wBACEb,EAAQc,KAAI,SAAAC,GAAM,OACjB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QAU9B,C,2MCnCDC,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,yGAAoCC,EAApC,+BAA2C,EAA3C,kBAG6BH,IAAAA,IAAA,sCACUC,EADV,iBAC0BE,IAJvD,cAGYC,EAHZ,yBAMaA,EAASf,MANtB,gCASQgB,QAAQtB,MAAR,MATR,0FAaeuB,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAoCC,EAApC,+BAAkD,GAAIJ,EAAtD,+BAA6D,EAA7D,kBAE6BH,IAAAA,IAAA,gCACIC,EADJ,iBACoBE,EADpB,kBACkCI,IAH/D,cAEYH,EAFZ,yBAKaA,EAASf,MALtB,gCAOMgB,QAAQtB,MAAR,MAPN,0FAWeyB,EAAe,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BT,GAA9B,gGAE6BC,IAAAA,IAAA,iBAAoBD,EAApB,oBAAkCE,IAF/D,cAEYG,EAFZ,yBAGaA,EAASf,MAHtB,gCAKMgB,QAAQtB,MAAR,MALN,yFASe0B,EAAU,GAAVA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBV,GAAzB,gGAE2BC,IAAAA,IAAA,iBAAoBD,EAApB,4BAA0CE,IAFrE,cAEUG,EAFV,yBAGWA,EAASf,MAHpB,gCAKIgB,QAAQtB,MAAR,MALJ,yFASeK,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BW,GAA5B,gGAE2BC,IAAAA,IAAA,iBAAoBD,EAApB,4BAA0CE,IAFrE,cAEUG,EAFV,yBAGWA,EAASf,MAHpB,gCAKIgB,QAAQtB,MAAR,MALJ,gF","sources":["components/Reviews/Reviews.js","servises/moviesApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../servises/moviesApi';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getReviews() {\n      try {\n        const data = await fetchReviews(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <Navigate to=\"/movies\" replace />}\n      {reviews.length === 0\n        ? (<p>We don`t have any reviews on this movie</p>)\n        : (<ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h3>Author: {review.author}</h3>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>)\n      }\n    </>\n  )\n}\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = \"3b8854889b3ae9f1745391c328ab3fe2\";\n\nasync function fetchTrendingMovies( page = 1 ) {\n    \n    try {\n      const response = await axios.get(\n        `/trending/movie/day?api_key=${API_KEY}&page=${page}`\n      );\n      return response.data;\n    \n    } catch (error) {\n        console.error(error);\n    } \n}\n\nasync function fetchMoviesOnSearch( searchQuery = \"\", page = 1) {\n    try {\n      const response = await axios.get(\n        `/search/movie?api_key=${API_KEY}&page=${page}&query=${searchQuery}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n}\n  \nasync function fetchMovieById(id) {\n    try {\n      const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  \nasync function fetchCast(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function fetchReviews(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport { fetchTrendingMovies, fetchMoviesOnSearch, fetchMovieById, fetchCast, fetchReviews };\n\n"],"names":["useState","reviews","setReviews","error","setError","movieId","useParams","useEffect","fetchReviews","data","results","getReviews","to","replace","length","map","review","author","content","id","axios","API_KEY","fetchTrendingMovies","page","response","console","fetchMoviesOnSearch","searchQuery","fetchMovieById","fetchCast"],"sourceRoot":""}